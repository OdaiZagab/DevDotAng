// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project001.API.Data;

namespace Project001.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("Project001.API.Models.Admin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("hotelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("userId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("hotelId");

                    b.HasIndex("userId");

                    b.ToTable("admins");
                });

            modelBuilder.Entity("Project001.API.Models.Floor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Hotelid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("number")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("Hotelid");

                    b.ToTable("floors");
                });

            modelBuilder.Entity("Project001.API.Models.Hotel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("location")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("phone")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("hotels");
                });

            modelBuilder.Entity("Project001.API.Models.Room", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Hotelid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("floorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("roomTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("Hotelid");

                    b.ToTable("rooms");
                });

            modelBuilder.Entity("Project001.API.Models.RoomType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Hotelid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("type")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("Hotelid");

                    b.ToTable("roomTypes");
                });

            modelBuilder.Entity("Project001.API.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Project001.API.Models.Admin", b =>
                {
                    b.HasOne("Project001.API.Models.Hotel", "hotel")
                        .WithMany()
                        .HasForeignKey("hotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project001.API.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hotel");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Project001.API.Models.Floor", b =>
                {
                    b.HasOne("Project001.API.Models.Hotel", null)
                        .WithMany("floors")
                        .HasForeignKey("Hotelid");
                });

            modelBuilder.Entity("Project001.API.Models.Room", b =>
                {
                    b.HasOne("Project001.API.Models.Hotel", null)
                        .WithMany("rooms")
                        .HasForeignKey("Hotelid");
                });

            modelBuilder.Entity("Project001.API.Models.RoomType", b =>
                {
                    b.HasOne("Project001.API.Models.Hotel", null)
                        .WithMany("roomTypes")
                        .HasForeignKey("Hotelid");
                });

            modelBuilder.Entity("Project001.API.Models.Hotel", b =>
                {
                    b.Navigation("floors");

                    b.Navigation("rooms");

                    b.Navigation("roomTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
